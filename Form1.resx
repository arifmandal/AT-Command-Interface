<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="serialPort1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAAAcAAAABQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALQAAAJwAAADpAAAA/wAA
        AP8AAAD+AAAAzQAAAHcAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACAAAAA8AAAAEkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAI8AAAD9AAAA/wAA
        APkAAADTAAAAwwAAAOAAAAD/AAAA/wAAAOcAAABFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAF8AAAD+AAAA+gAAAFEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAACyAAAA/wAA
        AOoAAABrAAAADwAAAAAAAAAAAAAAAAAAACgAAACgAAAA/gAAAPsAAABXAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0AAAD8AAAA9wAAADoAAAAAAAAAAAAAAAAAAAAAAAAAhQAA
        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
        +MOBwf+HwAP/D/AH/x/+P/+///////////8=
</value>
  </data>
</root>